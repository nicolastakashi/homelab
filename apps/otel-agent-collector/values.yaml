opentelemetry-collector:
  mode: "daemonset"
  image:
    repository: "otel/opentelemetry-collector-contrib"
    pullPolicy: IfNotPresent
    tag: "0.136.0"

  clusterRole:
    rules:
      - apiGroups: [""]
        resources: ["nodes"]
        verbs: ["get", "list"]

  presets:
    hostMetrics:
      enabled: true
    kubernetesAttributes:
      enabled: true

  config:
    exporters:
      prometheusremotewrite:
        endpoint: "http://thanos-receive.observability.svc.cluster.local:19291/api/v1/receive"
        send_metadata: true
        external_labels:
          k8s_cluster_name: "pt-north-1"
        tls:
          insecure: true

    processors:
      resourcedetection:
        detectors: [env, system, k8snode]
        timeout: 2s
        override: false
      transform:
        metric_statements:
          - context: datapoint
            statements:
              - set(attributes["k8s.container.name"], resource.attributes["k8s.container.name"])
              - set(attributes["k8s.namespace.name"], resource.attributes["k8s.namespace.name"])
              - set(attributes["k8s.pod.name"], resource.attributes["k8s.pod.name"])
              - set(attributes["k8s.node.name"], resource.attributes["k8s.node.name"])
              - set(attributes["process.command"], resource.attributes["process.command"])
              - set(attributes["process.command_line"], resource.attributes["process.command_line"])
              - set(attributes["process.executable.name"], resource.attributes["process.executable.name"])
              - set(attributes["process.executable.path"], resource.attributes["process.executable.path"])
              - set(attributes["process.owner"], resource.attributes["process.owner"])
              - set(attributes["process.parent_pid"], resource.attributes["process.parent_pid"])
              - set(attributes["process.pid"], resource.attributes["process.pid"])
    receivers:
      jaeger: null
      zipkin: null
      hostmetrics:
        scrapers:
          cpu:
            metrics:
              system.cpu.logical.count:
                enabled: true
          memory:
            metrics:
              system.memory.utilization:
                enabled: true
          filesystem:
            metrics:
              system.filesystem.utilization:
                enabled: true
              system.filesystem.usage:
                enabled: true
      prometheus:
        config:
          scrape_configs:
            - job_name: opentelemetry-agent-collector
              scrape_interval: 15s
              static_configs:
                - targets:
                    - ${env:MY_POD_IP}:8888
    service:
      pipelines:
        logs: null
        metrics:
          exporters:
            - prometheusremotewrite
          processors:
            - resourcedetection
            - transform
            - memory_limiter
            - batch
          receivers:
            - otlp
            - prometheus
        traces: null
